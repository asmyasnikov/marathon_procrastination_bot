name: YC Function Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.0
      - name: Deploy Function
        id: sls-func
        uses: yc-actions/yc-sls-function@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YANDEX_CLOUD_SERVICE_ACCOUNT_KEY_JSON }}
          folder-id: ${{ secrets.YANDEX_CLOUD_FOLDER_ID }}
          function-name: ${{ secrets.YANDEX_CLOUD_FUNCTION_NAME }}
          service-account: ${{ secrets.YANDEX_CLOUD_SERVICE_ACCOUNT_ID }}
          runtime: 'golang121'
          memory: '128Mb'
          entrypoint: 'index.Handler'
          environment: |
            DEBUG=True
            COUNT=1
            TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}
            YDB_CONNECTION_STRING=${{ secrets.YDB_CONNECTION_STRING }}
            YDB_METADATA_CREDENTIALS=1
            MAGIC_NUMBER=${{ secrets.MAGIC_NUMBER }}
          include: |
            ./internal
            ./go.mod
            ./go.sum
            ./index.go
      - name: Set Telegram WebHook
        run: >-
            curl
            -X POST
            https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/setWebhook
            --header "Content-Type: application/json"
            --data '{ "url": "https://functions.yandexcloud.net/${{ secrets.YANDEX_CLOUD_FUNCTION_ID }}" }'
      - name: Run YDB Migrations
        run: >-
          curl
          -X POST
          https://functions.yandexcloud.net/${{ secrets.YANDEX_CLOUD_FUNCTION_ID }}
          --header "Content-Type: application/json"
          --data '{ "wake_up": true }'
      - name: Bot WakeUp
        run: >-
          curl
          -X POST
          https://functions.yandexcloud.net/${{ secrets.YANDEX_CLOUD_FUNCTION_ID }}
          --header "Content-Type: application/json"
          --data '{ "migrate_schema": true }'
